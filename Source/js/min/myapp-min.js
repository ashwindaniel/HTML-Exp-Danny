function allowDrop(ev){ev.preventDefault()}function drag(ev){ev.dataTransfer.setData("text",ev.target.id)}function drop(ev){ev.preventDefault();var data=ev.dataTransfer.getData("text");ev.target.appendChild(document.getElementById(data))}function historyBack(){window.history.back()}function historyFwd(){window.history.forward()}function historyGo(n){window.history.go(-n)}function touching(){var el=document.body;el.addEventListener("touchstart",handleStart,!1),el.addEventListener("touchend",handleEnd,!1),el.addEventListener("touchcancel",handleCancel,!1),el.addEventListener("touchleave",handleEnd,!1),el.addEventListener("touchmove",handleMove,!1),log("initialized.")}function handleStart(evt){for(var el=document.getElementsByTagName("canvas")[0],ctx=el.getContext("2d"),touches=evt.changedTouches,offset=findPos(el),i=0;i<touches.length;i++)if(touches[i].clientX-offset.x>0&&touches[i].clientX-offset.x<parseFloat(el.width)&&touches[i].clientY-offset.y>0&&touches[i].clientY-offset.y<parseFloat(el.height)){evt.preventDefault(),log("touchstart:"+i+"..."),ongoingTouches.push(copyTouch(touches[i]));var color=colorForTouch(touches[i]);ctx.beginPath(),ctx.arc(touches[i].clientX-offset.x,touches[i].clientY-offset.y,4,0,2*Math.PI,!1),ctx.fillStyle=color,ctx.fill(),log("touchstart:"+i+".")}}function handleMove(evt){for(var el=document.getElementsByTagName("canvas")[0],ctx=el.getContext("2d"),touches=evt.changedTouches,offset=findPos(el),i=0;i<touches.length;i++)if(touches[i].clientX-offset.x>0&&touches[i].clientX-offset.x<parseFloat(el.width)&&touches[i].clientY-offset.y>0&&touches[i].clientY-offset.y<parseFloat(el.height)){evt.preventDefault();var color=colorForTouch(touches[i]),idx=ongoingTouchIndexById(touches[i].identifier);idx>=0?(log("continuing touch "+idx),ctx.beginPath(),log("ctx.moveTo("+ongoingTouches[idx].clientX+", "+ongoingTouches[idx].clientY+");"),ctx.moveTo(ongoingTouches[idx].clientX-offset.x,ongoingTouches[idx].clientY-offset.y),log("ctx.lineTo("+touches[i].clientX+", "+touches[i].clientY+");"),ctx.lineTo(touches[i].clientX-offset.x,touches[i].clientY-offset.y),ctx.lineWidth=4,ctx.strokeStyle=color,ctx.stroke(),ongoingTouches.splice(idx,1,copyTouch(touches[i])),log(".")):log("can't figure out which touch to continue")}}function handleEnd(evt){for(var el=document.getElementsByTagName("canvas")[0],ctx=el.getContext("2d"),touches=evt.changedTouches,offset=findPos(el),i=0;i<touches.length;i++)if(touches[i].clientX-offset.x>0&&touches[i].clientX-offset.x<parseFloat(el.width)&&touches[i].clientY-offset.y>0&&touches[i].clientY-offset.y<parseFloat(el.height)){evt.preventDefault();var color=colorForTouch(touches[i]),idx=ongoingTouchIndexById(touches[i].identifier);idx>=0?(ctx.lineWidth=4,ctx.fillStyle=color,ctx.beginPath(),ctx.moveTo(ongoingTouches[idx].clientX-offset.x,ongoingTouches[idx].clientY-offset.y),ctx.lineTo(touches[i].clientX-offset.x,touches[i].clientY-offset.y),ctx.fillRect(touches[i].clientX-4-offset.x,touches[i].clientY-4-offset.y,8,8),ongoingTouches.splice(i,1)):log("can't figure out which touch to end")}}function handleCancel(evt){evt.preventDefault(),log("touchcancel.");for(var touches=evt.changedTouches,i=0;i<touches.length;i++)ongoingTouches.splice(i,1)}function colorForTouch(touch){var r=touch.identifier%16,g=Math.floor(touch.identifier/3)%16,b=Math.floor(touch.identifier/7)%16,color="#"+(r=r.toString(16))+(g=g.toString(16))+(b=b.toString(16));return log("color for touch with identifier "+touch.identifier+" = "+color),color}function copyTouch(touch){return{identifier:touch.identifier,clientX:touch.clientX,clientY:touch.clientY}}function ongoingTouchIndexById(idToFind){for(var i=0;i<ongoingTouches.length;i++)if(ongoingTouches[i].identifier==idToFind)return i;return-1}function log(msg){var p=document.getElementById("log");p.innerHTML=msg+"\n"+p.innerHTML}function findPos(obj){var curleft=0,curtop=0;if(obj.offsetParent){do{curleft+=obj.offsetLeft,curtop+=obj.offsetTop}while(obj==obj.offsetParent);return{x:curleft-document.body.scrollLeft,y:curtop-document.body.scrollTop}}}var app=angular.module("DemoModule",["ngRoute"]).config(function($routeProvider){$routeProvider.when("/",{templateUrl:"../../pages/first.html"}).when("/intro",{templateUrl:"../../pages/first.html"}).when("/javascript",{templateUrl:"../../pages/javascript.html"}).when("/about",{templateUrl:"../../pages/about.html"}).when("/forms",{templateUrl:"../../pages/forms.html"}).when("/history",{templateUrl:"../../pages/history.html"}).when("/historyFwd",{templateUrl:"../../pages/historyFwd.html"}).when("/touch",{templateUrl:"../../pages/touch.html"}).when("/location",{templateUrl:"../../pages/location.html",controller:"LocationCtrl"}).when("/video",{templateUrl:"../../pages/video.html"}).when("/audio",{templateUrl:"../../pages/audio.html"}).when("/dragdropedit",{templateUrl:"../../pages/dragdropedit.html"}).otherwise({templateUrl:"../../pages/default.html"})}).controller("DemoCtrl",function($scope){$scope.message="Target scope"}),x=10;app.controller("LocationCtrl",function($scope){function storeLocation(position){$scope.latitude=position.coords.latitude,$scope.longitude=position.coords.longitude,$scope.reloadMap()}$scope.latitude=0,$scope.longitude=0,$scope.zoom=15,$scope.dataloaded=!1,$scope.map=null,$scope.renderMap=function(){$scope.dataloaded=!0,navigator.geolocation?$scope.position=navigator.geolocation.getCurrentPosition(storeLocation):alert("Your browser doesn't supports it!")},$scope.reloadMap=function(){$scope.map=new google.maps.Map(document.getElementById("map"),{center:new google.maps.LatLng($scope.latitude,$scope.longitude),zoom:$scope.zoom,mapTypeId:google.maps.MapTypeId.HYBRID})}}),$(document).ready(function(){$('[data-toggle="tooltip"]').tooltip()});var ongoingTouches=[];